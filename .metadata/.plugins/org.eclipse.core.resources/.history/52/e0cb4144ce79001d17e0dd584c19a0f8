<!DOCTYPE html>
<html lang="en">
	<head>
		<title>three.js webgl - geometry - cube</title>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0">
		<link type="text/css" rel="stylesheet" href="main.css">
	</head>
	<body>

		<!-- Import maps polyfill -->
		<!-- Remove this when import maps will be widely supported -->
		<script async src="https://unpkg.com/es-module-shims@1.3.6/dist/es-module-shims.js"></script>

		<script type="importmap">
			{
				"imports": {
					"three": "../build/three.module.js",
					"three/addons/": "./jsm/"
				}
			}
		</script>

		<script type="module">

			import * as THREE from 'three';

			let camera, scene, renderer;
			let mesh;
			var rightPressed = false;
			var leftPressed = false;
		

			init();
			animate();

			function init() {

				camera = new THREE.PerspectiveCamera( 70, window.innerWidth / window.innerHeight, 1, 1000 );
				camera.position.z = 400;	
				camera.position.y = 150;	
				console.log(camera.position);

				scene = new THREE.Scene();

				const texture = new THREE.TextureLoader().load( 'textures/crate.gif' );
				
				const geometry = new THREE.CylinderGeometry( 50, 50, 10, 10 );
				const material = new THREE.MeshBasicMaterial( {color: 0xffff00} );
				material.wireframe = true;
				mesh = new THREE.Mesh( geometry, material );
				scene.add( mesh );


				


				renderer = new THREE.WebGLRenderer( { antialias: true } );
				renderer.setPixelRatio( window.devicePixelRatio );
				renderer.setSize( window.innerWidth, window.innerHeight );
				document.body.appendChild( renderer.domElement );

				//

				window.addEventListener( 'resize', onWindowResize );

			}

			function onWindowResize() {

				camera.aspect = window.innerWidth / window.innerHeight;
				camera.updateProjectionMatrix();

				renderer.setSize( window.innerWidth, window.innerHeight );

			}

			function animate() {

				window.onkeydown = (e) => console.log(e.keyCode);
				requestAnimationFrame( animate );
				
				if(e.keyCode==39){
					keyDownHandler()
				}else{
				}
				//mesh.rotation.x += 0.005;
				//mesh.rotation.y += 0.005;
				//mesh.rotation.z += 0.05;
				//mesh.position.z += 0.05;

				renderer.render( scene, camera );

			}

			function keyDownHandler() {
   				mesh.position.x += 0.005
			}

			function keyUpHandler(e) {
  				 if(e.keyCode == 39) {
     				rightPressed = false;
   				 }
    			 else if(e.keyCode == 37) {
    			    leftPressed = false;
    			 }
			}		
	
			document.addEventListener("keydown", keyDownHandler, false);
			document.addEventListener("keyup", keyUpHandler, false);

			
		
		</script>

	</body>
</html>
