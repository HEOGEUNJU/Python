<!DOCTYPE html>
<html lang="en">
   <head>
      <title>three.js webgl - geometry - cube</title>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0">
      <link type="text/css" rel="stylesheet" href="main.css">
   </head>
   <body>

	  <div style="position: absolute;">
	  	<span>남은총알 : </span><span id="span_cnt_bullet">  </span><br>
	  	<span>남은세균 : </span><span id="span_cnt_bad"> 4 </span><br>
	  	
	  </div>
      <!-- Import maps polyfill -->
      <!-- Remove this when import maps will be widely supported -->
      <script async src="https://unpkg.com/es-module-shims@1.3.6/dist/es-module-shims.js"></script>

      <script type="importmap">
         {
            "imports": {
               "three": "../build/three.module.js",
               "three/addons/": "./jsm/"
            }
         }
      </script>

      <script type="module">

        import * as THREE from 'three';

        let camera, scene, renderer;
        let player;
      	var bads = [];
      	var bullets =[];
      var xzs = [
         {'x':-600,   'z':500},
         {'x':600,   'z':-500},
         {'x':600,   'z':500},
         {'x':-600,   'z':-500}
      ];
      

         function init() {

            camera = new THREE.PerspectiveCamera( 70, window.innerWidth / window.innerHeight, 1, 1000 );
            camera.position.z = 0;
            camera.position.y = 1000;
         
         
            console.log(camera.position);
      
            scene = new THREE.Scene();
         
            const texture = new THREE.TextureLoader().load( 'tangtang/airplane.png' );
            const geometry = new THREE.BoxGeometry( 100, 10, 100 );
            const material = new THREE.MeshBasicMaterial( { map: texture } );
            player = new THREE.Mesh( geometry, material );
            scene.add( player );
         
         player.position.z = 0;
         player.position.y = 0;
         camera.lookAt(player.position);
         
         for(var i=0; i<4; i++){
            const texture = new THREE.TextureLoader().load( 'tangtang/bad.png' );
            const geometry2 = new THREE.BoxGeometry( 100, 10, 100 );
            const material2 = new THREE.MeshBasicMaterial( { map: texture } );
            var mesh1 = new THREE.Mesh( geometry2, material2 );
            bads.push(mesh1);
            scene.add( mesh1 );
         }
         
         for(var i=0; i<4; i++){
            bads[i].position.x = xzs[i].x;
            bads[i].position.z = xzs[i].z;
         }
         
            renderer = new THREE.WebGLRenderer( { antialias: true } );
            renderer.setPixelRatio( window.devicePixelRatio );
            renderer.setSize( window.innerWidth, window.innerHeight );
            document.body.appendChild( renderer.domElement );

            //

            window.addEventListener( 'resize', onWindowResize );

      }

         function onWindowResize() {

            camera.aspect = window.innerWidth / window.innerHeight;
            camera.updateProjectionMatrix();

            renderer.setSize( window.innerWidth, window.innerHeight );
  
      }
      
      var p_speed = 0;
      var b_speed = 3+p_speed;
	  var spanCntBullet = document.getElementById("span_cnt_bullet");
	  var cntBullet = 10;	
	  spanCntBullet.innerHTML = cntBullet
	 
	  //spancntBullet.innerHTML = cntBullet;

        function animate() {
         	requestAnimationFrame( animate );

         	var rad = player.rotation.y;
         	var s = Math.sin(rad) * p_speed;
        	var c = Math.cos(rad) * p_speed;
            
        	player.position.z += -c;
        	player.position.x += -s;
        	 
		 	for(var i=0; i<bullets.length; i++){
				var rad = bullets[i].rotation.y;
         		var s = Math.sin(rad) * b_speed;
        		var c = Math.cos(rad) * b_speed;
            
        		bullets[i].position.z += -c;
        		bullets[i].position.x += -s;
			}
			
         
        	renderer.render( scene, camera );
         }
      
	  function shooting(){

			console.log(player.position)
			var geometry = new THREE.BoxGeometry( 20, 10,100 );
			//var geometry = new THREE.SphereGeometry( 20, 6,6 );
            var material = new THREE.MeshBasicMaterial( {color: 0xfffff} );
            material.wireframe = true;
            var bullet = new THREE.Mesh( geometry, material );

			bullet.rotation.y=player.rotation.y
			bullet.position.x=player.position.x
			bullet.position.y=player.position.y
			bullet.position.z=player.position.z

 			scene.add( bullet );
			bullets.push(bullet);
			if(cntBullet>0){
				cntBullet--;
				console.log(cntBullet);
 				spanCntBullet.innerHTML = cntBullet
			}else{
				spanCntBullet.innerHTML = "남은 총알이 없습니다."
			}
		}


      document.addEventListener("keydown", onDocumentKeyDown, false);
      function onDocumentKeyDown(event) {

            var key = event.key;

            if(key == "ArrowUp") {
               p_speed += 0.1;
            }
            else if(key == "ArrowDown") {
               p_speed -= 0.5;
            }
            else if(key == "ArrowLeft") {
               player.rotation.y += 0.2;
            }
            else if(key == "ArrowRight") {
               player.rotation.y -= 0.2;
            }
            else if(key == ' '){
				shooting();			


            /*
               const texture = new THREE.TextureLoader().load( 'tangtang/missile.png' );
               const geometry = new THREE.BoxGeometry( 100, 10, 100 );
               const material = new THREE.MeshBasicMaterial( { map: texture } );
               var mesh2 = new THREE.Mesh( geometry, material );
               scene.add( mesh2 );
            */       
            }
            
            if(p_speed<0){
               p_speed = 0;
            }
                        
         };
		


     	init();
        animate();
      </script>
      
   </body>
</html>