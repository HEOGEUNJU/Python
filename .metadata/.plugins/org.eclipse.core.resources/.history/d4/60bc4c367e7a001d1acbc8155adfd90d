<!DOCTYPE html>
<html lang="en">
   <head>
      <title>three.js webgl - geometry - cube</title>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0">
      <link type="text/css" rel="stylesheet" href="main.css">
   </head>
   <body>

      <!-- Import maps polyfill -->
      <!-- Remove this when import maps will be widely supported -->
      <script async src="https://unpkg.com/es-module-shims@1.3.6/dist/es-module-shims.js"></script>

      <script type="importmap">
         {
            "imports": {
               "three": "../build/three.module.js",
               "three/addons/": "./jsm/"
            }
         }
      </script>

      <script type="module">

         import * as THREE from 'three';

         let camera, scene, renderer;
         let mesh;
         
         var meshes = [];
         
         var xzs = [
            {'x':-100	,   'z':100		,'color':0xff0000},
            {'x':0		,   'z':100		,'color':0xff0000},
            {'x':100	,   'z':100		,'color':0xff0000},
            
            {'x':-100	,   'z':0},
            {'x':0		,   'z':0},
            {'x':100	,   'z':0},
            
            {'x':-100	,   'z':-100},
            {'x':0		,   'z':-100},
            {'x':100	,   'z':-100}
         ];
         
         init();
         animate();

         function init() {

            camera = new THREE.PerspectiveCamera( 70, window.innerWidth / window.innerHeight, 1, 1000 );
            camera.position.z = 400;
            camera.position.y = 150;
            console.log(camera.position);
            scene = new THREE.Scene();

            for(var i=0; i<9; i++){
               const geometry = new THREE.CylinderGeometry( 40, 40, 10, 10 );
               const material = new THREE.MeshBasicMaterial( {color: 0xff0000} );
               material.wireframe = true;
               var mesh1 = new THREE.Mesh( geometry, material );
               meshes.push(mesh1);
               scene.add( mesh1 );
            }
            
            for(var i=0; i<meshes.length; i++){
               meshes[i].position.x = xzs[i].x;
               meshes[i].position.z = xzs[i].z;
            }
            


            renderer = new THREE.WebGLRenderer( { antialias: true } );
            renderer.setPixelRatio( window.devicePixelRatio );
            renderer.setSize( window.innerWidth, window.innerHeight );
            document.body.appendChild( renderer.domElement );
            

            window.addEventListener( 'resize', onWindowResize );

         }

         function onWindowResize() {

            camera.aspect = window.innerWidth / window.innerHeight;
            camera.updateProjectionMatrix();

            renderer.setSize( window.innerWidth, window.innerHeight );

         }
         var cnt = 0;
         function animate() {

            requestAnimationFrame( animate );
            

            renderer.render( scene, camera );
            console.log("cnt", cnt);
            cnt++;
         }

      </script>

   </body>
</html>